it
25.9.22
目録
第一阶段(P001 - P373)
第01章 内容介绍(P001 - P006)
第02章 Java概述(P007 - P034)
第03章 变量(P035 - P062)
第04章 运算符(P063 - P103)
第05章 程序控制结构(P104 - P155)
第06章 数组、排序和查找(P156 - P191)
第07章 面向对象编程（基础部分）(P192 - P263)
第08章 面向对象编程（中级部分）(P264 - P361)
第09章 房屋出租系统(P362 - P373)
第二阶段(P374 - P661)
第10章 面向对象编程（高级部分）(P374 - P424)
第11章 枚举和注解(P425 - P443)
第12章 异常(P444 - P459)
第13章 常用类(P460 - P498)
第14章 集合(P499 - P553)
第15章 泛型(P554 - P568)
第16章 坦克大战1(P569 - P579)
第17章 多线程编程(P580 - P599)
第18章 坦克大战2(P600 - P610)
第19章 IO流(P611 - P644)
第20章 坦克大战3(P645 - P661)
第三阶段(P662 - P910)
第21章 网络编程(P662 - P684)
第22章 多用户即时通信系统(P685 - P710)
第23章 反射(P711 - P730)
第24章 零基础学MySQL(P731 - P820)
第25章 JDBC和数据库连接池(P821 - P857)
第26章 满汉楼(P858 - P877)
第27章 正则表达式(P878 - P904)
第28章 算法优化体验课 - 骑士周游问题(P905 - P910)
 
U (Untracked) → 未跟踪：
还没被 Git 管理的新文件，比如你新建的 .java 文件。
M (Modified) → 已修改：
文件之前提交过，现在改动了。
A (Added) → 已添加：
文件已经被加入到 Git 的暂存区（git add 过），等着提交。


java 源文件
javac= java.exe
.class文件字节码文件

-新建文件
v新建文件夹 folder

ls：list，列出当前目录里的文件和文件夹
cd 是 change directory 的缩写，意思是“切换目录”或者“进入文件夹”。

反斜杠 option+¥

\t均分
\n 换行

整数：integer。 分数：decimal

int 整型； 
int age = 20; double score= 88.6; 小数
char gender =‘男'； string name = "king"; 字符串
byte字节：占用存储空间。
byte：计算机中基础存储单位 1byte = 8bit。
short 短整型，int整型，long长整型

单精度float；双精度double；

Java的整型常量（具体值）默认为int型，声明long型常量须后加L或l
 int n1 = 1; //4个字节
 int n2 = 1L； //对不对？不对
long n3 = 1L; //8个字节


java数据类型 背
1.java数据类型分为两大类 基本数据类型 引用数据类型
2.基本数据类型有8种 数值型（整数类型，存放整数byte[1]，short[2]，int[4]，long[8] ）
                        浮点（小数）类型（float[4]，double[8]）
                 字符型（char[2]），存放单个字符'a'
                 布尔型（boolean[1]），存放一个字符，true，false
3.引用数据类型  类（class），接口（interface），数组（[]）

0042 浮点数使用
1.关于浮点在机器中存放形式的简单说明，浮点数=符号位+指数位+尾数位
2.尾数部分可能丢失，造成精度损失（小数都是近似值）
例子：123.456 = 1.23456 × 10^2
有效数字 = 1.23456
指数 = 2
符号 = 正（因为数字是正的）

0043 浮点数细节1
浮点型常量有两种表示形式
十进制数形式：  如：5.12   512.0f  .512(必须有小数点)
科学计数法形式：如：5.12e2[5.12*10的二次方] 5.12E-2[5.12/10的二次方]   

3.Java的浮点型常量（具体值）默认为double型，声明float型常量须后加F或f
  可以通过java API 来看

4.通常情况下应该使用double型，因为他比float型更精确。[更精确]
double num9  = 1234567851；
float num10 = 1234567851F；
5.浮点数使用陷阱：2.7 和 8.1/3 比较

Java API 文档
1.API（Application programming Interface, 应用程序编程接口），是java提供的基本编程接口
（java提供的类还有相关的方法）。中文在线文档：https://www.matools.com
2.Java语言提供了大量的基础类。Oracle公司
3.java类的组织形式
4.举例说明如何使用 ArrayList类有哪些方法。
按：包->类->方法
直接索引 Math

0046 字符类型（char）
• 基本介绍
字符类型可以表示单个字符，字符类型是char，char是两个字节（可以存放汉字），多个字符我们用字符串String（我们后面详细讲解String）
• 案例演示 Char01.java
#代码
char c1 = 'a';
char c2 = '\t";
char c3 = '#';
char c4 = 97;

0047 字符类型（char）
•字符类型使用细节
1.字符常量是用单引号（”）括起来的单个字符。例如：
char c1 = 'a': char c2 = '中'; char c3 = '9';
2.Java中还允许使用转义字符 '\'来将其后的字符转变为特殊字符型常量。
例如：charc3 = '\n'; // '\n'表示換行符
3.在java中，char的本质是一个整数，在输出时，是unicode码对应的字符。
http://tool.chinaz.com/Tools/Unicode.aspx
4.可以直接给char赋一个整数，然后输出时，会按照对应的unicode 字符输出 ［97-》a］
5.char类型是可以进行运算的，相当于一个整数，因为它都对应有Unicode码。

0048  字符型（Char）
• 字符类型本质探讨
1.字符型 存储到 计算机中，需要将字符对应的码值（整数）找出来，比如'a’
  存備：a'==＞码値 97 ==＞ 二进制(110 0001) ==＞存備
  读取：二进制(110 0001) =>97(十进制) ===>'a'=> 显示

2.字符和码值的对应关系是通过字符编码表决定的（是规定好）
• 介绍一下字符编码表［sublime测试］
  ASCII（ASCII 编码表一个字节表示，一个128个字符，实际上一个字节可以表示256个字符。但这里只用了128个）
  Unicode （Unicode 编码表 固定大小的编码 使用两个字节来表示字符，字母和汉字统一都是占用两个字节，这样浪费空间）
  utf-8（编码表，大小可变的编码 字母使用1个字节，汉字使用3个宗节）
  gbk（可以表示汉字，而且范围广，字母使用1个字节，汉字2个字节）
  gb2312 可以表示汉字，gb2312＜gbk）
  big5码（繁体中文，台湾、香港）

  0049  Unicode编码介绍（了解）
 
 0050 布尔类型：boolean
基本介绍
1．布型叫boolean型
booolean类型数据只允许取值true和false，无null
2. boolean类型占1个字节。
boolean 类型适于逻辑运算，一般用于程序流程控制［这个后面会详细介绍」：
if条件控制语句：
while循环控制语句：
do-while循环控制语句；
for循环控制语句

不可以0或非0的整数替代false和true，这点和c语言不同

0051 自动类型转换基础
当java程序在进行赋值或者运算时，精度小的类型自动转换大的数据类型。
这个就是自动类型转换。
数据类型按精度（容量）大小排序为（背，规则） 低--高 eg：short 的精度比 int 低
char ---> int  ---> long  ---> float  ---> double
byte ---> short  ---> int  ---> long  ---> float  ---> double

0053 基本数据类型转换
1.有多种类型的数据混合运算时，
系统首先自动将所有数据转换成容量最大的那种数据类型，然后再进行计算
2.细节2: 当我们把精度（容量）大 的数据类型赋值给精度（容量）小 的数据类型时，
  就会报错，反之就会进行自动类型转换。
3.(byte, short）和 char之间不会相互自动转换
4.byte，short，char它们三者可以计算 或 单种之间的计算eg：byte + byte，在计算时首先转换为int类型
5.boolean不参与转换
6.自动提升原则：表达式结果的类型自动提升为 操作数中最大的类型

0055 强制类型转换细节
ForceConvertDetail.java
1.当进行数据的的大小从 大------->小，就需要使用强制转换
2.强制转换只针对于最近的操作数有效，往往会使用小括号提升优先级

3.char类型可以保存int的常量值，但不能保存int的变量值，需要强转
4.byte和short,char在进行运算时，当作int类型处理

1.short s = 12; // ok
s = s - 9; //错误，short不能运算，转换int. s-9是int，int不能再赋给short
2.byte b = 10; //ok
  b = b + 11; // 错误 int = b + 11。 int->byte     
  b = (byte)(b + 11); // 正确，使用强转
3.char c = 'a'; //ok   // 想把a当字的话直接输出，想参与运算的话就要在println输出的时候加int强制转化
  int i = 16; //ok
  float d = .314F; //ok
  double result = c + i +d; // 正确答案： ok， float -》 double
                             自己写的不对 char c = (char)c; System.out.println(c + i +d)
4.byte b = 16; //ok
  short s = 14; // ok
  short t = s + b; //  错误 ，因为int -》short 
                       int t = s + b;


0057 基本数据类型和String类型的转换
介绍
在程序开发中，我们经常需要将基本数据类型转换为String类型。或者将String类型转换为基本数据类型。
基本类型转String类型 
语法：将基本类型的值+"" 即可

0058 
1.在将String类型转成基本数据类型时，要确保String类型能够转成有效的数据，
  比如我们可以把"123"，转成一个整数，但是不能把"hello"转成一个整数
2.如果格式不正确，就会抛出异常，程序就会终止，这个问题 异常处理 那里讲


0062 运算符介绍
运算符是一种特殊的符号，用以表示数据的运算、赋值和比较等。
1. 算术运算符
2.赋值运算符
3.关系运算符（比较运算符）
4.逻辑运算符
5.位运算符（需要二进制基础）
6.三元运算符